#!/bin/bash

get_battery() {
    local battery_path="/sys/class/power_supply/BAT0"
    if [[ -e "$battery_path" ]]; then
        local battery_capacity=$(cat "$battery_path/capacity")
        local battery_status=$(cat "$battery_path/status")

        # Determine the battery icon based on capacity
        if [ "$battery_capacity" -ge 80 ]; then
            battery_icon=""  # Full
        elif [ "$battery_capacity" -ge 60 ]; then
            battery_icon=""  # Three-quarters
        elif [ "$battery_capacity" -ge 40 ]; then
            battery_icon=""  # Half
        elif [ "$battery_capacity" -ge 20 ]; then
            battery_icon=""  # Quarter
        else
            battery_icon=""  # Empty
        fi

        echo "$battery_icon $battery_capacity% ($battery_status)"
    else
        echo "Battery information unavailable"
    fi
}

get_stock_price() {
    local stock=$1
    local url="https://www.google.com/finance/quote/$stock"
    local price=$(curl -s "$url" | grep -oP 'data-last-price="\K[0-9.]+' | head -n 1)

    if [[ -z "$price" ]]; then
        echo "Error: Could not fetch price for $stock" >&2
        price=0
    fi

    echo "$price"
}

get_total_stock_value() {
    local swissre=$(get_stock_price "SWX:SREN")
    local swisslife=$(get_stock_price "SWX:SLHN")
    local calida=$(get_stock_price "SWX:CALN")
    local lindt=$(get_stock_price "SWX:LISN")
    local swatch=$(get_stock_price "SWX:UHR")

    local total=$(echo "$swissre + $swisslife + $calida + $lindt + $swatch" | bc)

    echo "Total stock value: $total"
}

# Function to get current time
get_time() {
    echo "$(date '+%Y.%m.%d %H:%M:%S')"
}

# Function to get WLAN connection information
get_wlan() {
    echo "$(nmcli -t -f active,ssid dev wifi | grep '^yes' | cut -d ':' -f 2)"
}

# Function to get weather information from wttr.in
get_weather() {
    local weather=$(curl -s 'wttr.in/?format=%C+%t')  # Fetch weather condition and temperature

    if [[ -n "$weather" ]]; then
        local condition=$(echo "$weather" | awk '{print $1}')  # Extract weather condition
        local temperature=$(echo "$weather" | awk '{print $2}')  # Extract temperature

        # Set weather icon based on condition
        case $condition in
            "Clear" | "Sunny")
                weather_icon=""  # Sun icon
                ;;
            "Partly")
                weather_icon=""  # Partly cloudy icon
                ;;
            "Cloudy" | "Overcast" | "mist" | "fog")
                weather_icon=""  # Cloud icon
                ;;
            "Rain")
                weather_icon=""  # Rain icon
                ;;
            "Snow")
                weather_icon=""  # Snow icon
                ;;
            *)
                weather_icon=""  # Default icon for unknown conditions
                ;;
        esac

        echo "$weather_icon $condition $temperature"
    else
        echo "Weather information unavailable"
    fi
}

# Main loop to update status
weather_interval=600  # Weather update every 10 minutes (600 seconds)
weather_last_fetched=0
stock_interval=3600   # Stock price update every 60 minutes (3600 seconds)
stock_last_fetched=0
stock_value="Fetching stock prices..."

while true; do
    current_time=$(date +%s)
    battery=$(get_battery)
    time=$(get_time)
    wlan=$(get_wlan)

    # Update weather every 10 minutes
    if (( current_time - weather_last_fetched >= weather_interval )); then
        weather=$(get_weather)
        weather_last_fetched=$current_time
    fi

    # Update stock prices every 60 minutes
    if (( current_time - stock_last_fetched >= stock_interval )); then
        stock_value=$(get_total_stock_value)
        stock_last_fetched=$current_time
    fi

    # Prepare the status line
    status_line="$weather | $stock_value | $battery |  $wlan |  $time"

    # Display the status in the appropriate place (e.g., xsetroot)
    xsetroot -name "$status_line"

    # Sleep for 1 second before the next update
    sleep 1
done
