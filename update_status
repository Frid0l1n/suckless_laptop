#!/bin/bash

# Function to get battery status and capacity
get_battery() {
    local battery_path="/sys/class/power_supply/BAT0"
    if [[ -e "$battery_path" ]]; then
        local battery_capacity=$(cat "$battery_path/capacity")
        local battery_status=$(cat "$battery_path/status")

        # Determine the battery icon based on capacity and status
        if [ "$battery_status" == "Charging" ]; then
            if [ "$battery_capacity" -ge 90 ]; then
                battery_icon=""  # Charging 90%
            elif [ "$battery_capacity" -ge 80 ]; then
                battery_icon=""  # Charging 80%
            elif [ "$battery_capacity" -ge 70 ]; then
                battery_icon=""  # Charging 70%
            elif [ "$battery_capacity" -ge 60 ]; then
                battery_icon=""  # Charging 60%
            elif [ "$battery_capacity" -ge 50 ]; then
                battery_icon=""  # Charging 50%
            elif [ "$battery_capacity" -ge 40 ]; then
                battery_icon=""  # Charging 40%
            elif [ "$battery_capacity" -ge 30 ]; then
                battery_icon=""  # Charging 30%
            elif [ "$battery_capacity" -ge 20 ]; then
                battery_icon=""  # Charging 20%
            elif [ "$battery_capacity" -ge 10 ]; then
                battery_icon=""  # Charging 10%
            else
                battery_icon=""  # Charging 0%
            fi
        else
            if [ "$battery_capacity" -ge 90 ]; then
                battery_icon=""  # 90% - Full
            elif [ "$battery_capacity" -ge 80 ]; then
                battery_icon=""  # 80%
            elif [ "$battery_capacity" -ge 70 ]; then
                battery_icon=""  # 70%
            elif [ "$battery_capacity" -ge 60 ]; then
                battery_icon=""  # 60%
            elif [ "$battery_capacity" -ge 50 ]; then
                battery_icon=""  # 50%
            elif [ "$battery_capacity" -ge 40 ]; then
                battery_icon=""  # 40%
            elif [ "$battery_capacity" -ge 30 ]; then
                battery_icon=""  # 30%
            elif [ "$battery_capacity" -ge 20 ]; then
                battery_icon=""  # 20%
            elif [ "$battery_capacity" -ge 10 ]; then
                battery_icon=""  # 10%
            else
                battery_icon=""  # 0%
            fi
        fi

        echo "$battery_icon $battery_capacity% ($battery_status)"
    else
        echo "Battery information unavailable"
    fi
}

# Function to get current time
get_time() {
    echo "$(date '+%Y.%m.%d %H:%M:%S')"
}

# Function to get WLAN connection information
get_wlan() {
    echo "$(nmcli -t -f active,ssid dev wifi | grep '^yes' | cut -d ':' -f 2)"
}

# Function to get weather information from wttr.in
get_weather() {
    local weather=$(curl -s 'wttr.in/?format=%C+%t')  # Fetch weather condition and temperature

    if [[ -n "$weather" ]]; then
        local condition=$(echo "$weather" | awk '{print $1}')  # Extract weather condition
        local temperature=$(echo "$weather" | awk '{print $2}')  # Extract temperature

        # Set weather icon based on condition
        case $condition in
            "Clear" | "Sunny")
                weather_icon=""  # Sun icon
                ;;
            "Partly")
                weather_icon=""  # Partly cloudy icon
                ;;
            "Cloudy" | "Overcast" | "mist" | "fog")
                weather_icon=""  # Cloud icon
                ;;
            "Rain")
                weather_icon=""  # Rain icon
                ;;
            "Snow")
                weather_icon=""  # Snow icon
                ;;
            *)
                weather_icon=""  # Default icon for unknown conditions
                ;;
        esac

        echo "$weather_icon $condition $temperature"
    else
        echo "Weather information unavailable"
    fi
}

# Function to get brightness level
get_brightness() {
    local brightness=$(xbacklight -get | awk '{print int($1)}')
    echo " $brightness%"
}

# Main loop to update status
weather_interval=600  # Weather update every 10 minutes (600 seconds)
weather_last_fetched=0

while true; do
    current_time=$(date +%s)
    battery=$(get_battery)
    time=$(get_time)
    wlan=$(get_wlan)
    brightness=$(get_brightness)
    # Update weather every 10 minutes
    if (( current_time - weather_last_fetched >= weather_interval )); then
        weather=$(get_weather)
        weather_last_fetched=$current_time
    fi

    # Prepare the status line
    status_line="$weather | $battery | $brightness |  $wlan |  $time"

    # Display the status in the appropriate place (e.g., xsetroot)
    xsetroot -name "$status_line"

    # Sleep for 1 second before the next update
    sleep 1
done
